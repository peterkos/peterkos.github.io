

// This is so hacky, but alas, Bandcamp iframes are as they are.
$heights: (1: 588px, 2: 720px, 3: 555px, 4: 442px, 5: 786px)
// $heights: (1: 600px, 2: 600px, 3: 600px, 4: 600px, 5: 600px)


	

$colors: (1: hsla(60, 10%, 24%, 1.00), 2: hsla(237, 16%, 25%, 1.00), 3: purple, 4: gray, 5: pink)


// Function that sets each album's div height to match the Bandcamp player
=setHeight($first, $last) 

	@for $i from $first through $last
		
		$currentHeight: map-get($heights, $i)
		$currentColor: map-get($colors, $i)
		
		.album#{$i}
		
			// Set height of div, along with padding and color
			height: $currentHeight
			background-color: $currentColor
			padding: 40px 15%

			// Readability
			@if lightness($currentColor) <= 30%
				.info
					color: white
			@else
				.info
					color: black
			
			// Set height of bandcamp player
			// !important overrides HTML setting (in case of error)
			// Commented fixed height is for possibly standardizing heights of all players
			// However, it doesn't seem to work too well with smaller albums and single tracks :(
			iframe
				height: $currentHeight !important
				// height: 600px !important


			// For debugging map values
			p::after
				// content: "#{$currentHeight}"
				// content: "#{lightness($currentColor)}"
			
*
	font-family: sans-serif

body
	height: 100%
	padding: 0
	margin: 0


h1.name
	font-size: 4.5rem
	font-weight: 1
	padding-top: 100px
	text-align: center

nav
	text-align: center

	h2
		display: inline-block
		font-size: 5rem
		margin: 20px

		&.page
			padding-top: 10%

		&.disabled
			opacity: 0.4
	
	padding-bottom: 10%
		

.music

	@include setHeight(1, length($heights))


	.album

		// Album padding is handled in the mixin, to allow dynamically-assigned background
		// to expand around the edges
		// border: 2px solid pink
			

		iframe
			float: left
			display: inline-block
			margin-right: 20px

		h6
			margin: 0 !important
			font-size: 10px
			color: gray
		


	
// TODO: Make this smarter and do it automatically
// see https://panic.com/blog/itunes-11-and-colors/
// and https://thomaspark.co/2012/12/the-itunes-expanding-album-effect-in-css-js/
// and http://charlesleifer.com/blog/using-python-and-k-means-to-find-the-dominant-colors-in-images/

// While we're at it, more references:
// http://jackiebalzer.com/color
