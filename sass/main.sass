



// This is so hacky, but alas, Bandcamp iframes are as they are.

// $height1: 588px

$heights: (1: 588px, 2: 200px, 3: 820px)
$colors: (1: hsla(60, 10%, 24%, 1.00), 2: white, 3: purple)


// Function that sets each album's div height to match the Bandcamp player
=setHeight($first, $last) 

	@for $i from $first through $last
		
		$currentHeight: map-get($heights, $i)
		$currentColor: map-get($colors, $i)
		
		.album#{$i}
		
			// Set height of div, along with padding and color
			height: $currentHeight
			background-color: $currentColor
			padding: 20px 15% 20px 15%

			// Readability
			@if lightness($currentColor) <= 30%
				.info
					color: white
			@else
				.info
					color: black
			
			// Set height of bandcamp player
			iframe
				height: $currentHeight


			// For debugging map values
			p::after
				// content: "#{$currentHeight}"
				content: "#{lightness($currentColor)}"
			

body
	height: 100%
	padding: 0
	margin: 0

*
	font-family: sans-serif

h1.name
	font-size: 4.5rem
	font-weight: 1
	padding-top: 100px
	text-align: center

nav
	text-align: center

	h2
		display: inline-block
		font-size: 5rem
		margin: 20px

		&.page
			padding-top: 10%

		&.disabled
			opacity: 0.4
	
	padding-bottom: 10%
		

.music

	@include setHeight(1, 3)


	.album

		// Album padding is handled in the mixin, to allow dynamically-assigned background
		// to expand around the edges
		border: 2px solid pink
			

		iframe
			float: left
			display: inline-block
			margin-right: 20px





	
// TODO: Make this smarter and do it automatically
// see https://panic.com/blog/itunes-11-and-colors/
// and https://thomaspark.co/2012/12/the-itunes-expanding-album-effect-in-css-js/
// and http://charlesleifer.com/blog/using-python-and-k-means-to-find-the-dominant-colors-in-images/
